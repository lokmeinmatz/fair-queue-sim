body, #root {
  padding: 0;
  width: 100vw;
}

.sim-input > form {
  fieldset {
    width: 200px;
  }

  display: flex;
  max-width: 600px;
  flex-direction: column;

}


.packet-list {

  .scrollable {
    overflow-y: scroll;
    border: 1px solid gray;
    border-radius: 4px;
  }

  $cell-widths: (3em 6em 6em);

  p {
    margin: 0;
  }

  @for $i from 1 through length($cell-widths) {
    $w: nth($cell-widths, $i);

    p:nth-child(#{$i}) {
      width: $w;
    }
  }

  & &__head {
    display: flex;
    
  }

  & &__body {
    max-height: 400px;
    .width-full {
      width: 100%;
      display: flex;
      
    }
  }
}

.sim-state {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: min-content auto;
  grid-template-areas: 
    "controls controls"
    "queue-state queue-state"
    "throughputs latencies"
    "latency-graph latency-graph"
  ;

  .arrow-right {
    width: 50px;
    height: 50px;
    align-self: center;
    transform: rotate(-90deg);
    flex-shrink: 0;
  }

  tr {
    transition: background-color 0.2s linear;
    border-bottom: 1px solid gray;
  }

  #basic-state {
    grid-area: controls;
    justify-self: start;
    border: 1px solid gray;
    display: grid;
    grid-template-columns: auto min-content auto;
    gap: 1em;

    .strategy-infos {
      margin-right: 1em;
      p {
        margin: 0.2em 0;
      }
    }

    table {
      width: unset;
      tbody tr:nth-child(2n) {
        background-color: unset;
      }
    }


  }

  #queue-state {
    grid-area: queue-state;
    display: flex;
    flex-wrap: nowrap;
    margin: 1em;
    
  }

  #throughputs {
    grid-area: throughputs;
  }

  #latencies {
    grid-area: latencies;
    max-width: 300px;
    table {
      border-left: 1px solid gray;
    }

    td:nth-child(1) {
      width: min-content;
      word-wrap: initial;
    }

    td:nth-child(2), td:nth-child(3) {
      text-align: right;
    }
  }

  #latency-graph {
    position: relative;
    grid-area: latency-graph;
  }

}